ARG UBI_MICRO_VERSION
ARG TEMURIN_JDK_VERSION
ARG DOCKER_UPSTREAM_REGISTRY
ARG DOCKER_UPSTREAM_TAG
ARG GOLANG_VERSION
ARG UBI_MINIMAL_VERSION
ARG OPENSSL_VERSION

FROM docker.io/golang:${GOLANG_VERSION} AS build-ub-package-dedupe
RUN useradd --no-log-init --create-home --shell /bin/bash appuser

WORKDIR /build/package_dedupe
COPY --chown=appuser:appuser package_dedupe/ ./
RUN go build -ldflags="-w -s" ./package_dedupe.go

WORKDIR /build/ub
COPY --chown=appuser:appuser ub/ ./
RUN go build -ldflags="-w -s" ./ub.go

USER appuser
RUN go test ./...

FROM registry.access.redhat.com/ubi9-minimal:${UBI_MINIMAL_VERSION} AS REFRESH
ARG OPENSSL_VERSION
ARG PROJECT_VERSION
ARG ARTIFACT_ID

# Remember where we came from
LABEL io.confluent.docker.git.repo="confluentinc/common-docker"

ARG GIT_COMMIT
LABEL io.confluent.docker.git.id=$GIT_COMMIT

ARG BUILD_NUMBER=-1
LABEL io.confluent.docker.build.number=$BUILD_NUMBER

LABEL maintainer="tools@confluent.io"
LABEL vendor="Confluent"
LABEL version=$GIT_COMMIT
LABEL release=$PROJECT_VERSION
LABEL name=$ARTIFACT_ID
LABEL summary="Common base image for new Confluent lightweight Docker images."
LABEL description="Common base image for Confluent lightweight Docker images."
LABEL io.confluent.docker=true
# This affects how strings in Java class files are interpreted.  We want UTF-8 and this is the only locale in the
# base image that supports it
ENV LANG="C.UTF-8"
ENV USE_LOG4J_2="True"

RUN printf "[temurin-jre] \n\
name=temurin-jre \n\
baseurl=https://adoptium.jfrog.io/artifactory/rpm/rhel/\$releasever/\$basearch \n\
enabled=1 \n\
gpgcheck=1 \n\
gpgkey=https://adoptium.jfrog.io/artifactory/api/gpg/key/public \n\
" > /etc/yum.repos.d/adoptium.repo

# ENV required when manually installing openssl,
# for arm64 required binaries are present in /usr/local/lib
# for amd64 required binaries are present in /usr/local/lib64, hence setting LD_LIBRARY_PATH accordingly
ENV LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:$LD_LIBRARY_PATH

# Install a FIPS-enabled version of OpenSSL. Only specific versions of OpenSSL support FIPS. Verify the supported versions at https://openssl-library.org/source/.
# Consult the security policy document for the specific OpenSSL version to ensure proper installation in a FIPS-compliant manner.
# Security document can also be found at https://openssl-library.org/source/ corresponding to every supported version of OpenSSL.
# For details on the necessary configuration changes in openssl.cnf, please refer to the documentation at: https://docs.openssl.org/3.0/man7/fips_module/#description
RUN microdnf --nodocs -y install yum \
    && yum --nodocs -q update -y \
    && yum --nodocs -q install -y wget tar gzip make perl gcc \
    && wget -q https://github.com/openssl/openssl/releases/download/openssl${OPENSSL_VERSION}/openssl${OPENSSL_VERSION}.tar.gz \
    && tar -xzf openssl${OPENSSL_VERSION}.tar.gz \
    && cd openssl${OPENSSL_VERSION} \
    && echo "installing FIPS compliant openssl" \
    && ./Configure enable-fips \
    && make > /dev/null 2>&1 \
    && make install > /dev/null 2>&1 \
    && echo "successfully installed FIPS compliant openssl" \
    && cd .. \
    && rm -rf openssl${OPENSSL_VERSION} openssl${OPENSSL_VERSION}.tar.gz \
    && yum remove -y wget tar make perl gcc glibc-gconv-extra --setopt=clean_requirements_on_remove=1 \
    && microdnf install -y --setopt=install_weak_deps=False \
        "crypto-policies-scripts${CRYPTO_POLICIES_SCRIPTS_VERSION}" \
        "findutils${FINDUTILS_VERSION}" \
        "hostname${HOSTNAME_VERSION}" \
        "temurin-21-jre${TEMURIN_JDK_VERSION}" \
    && yum clean all \
    && rm -rf /tmp/* \
    && mkdir -p /etc/confluent/docker /usr/logs \
    && useradd --no-log-init --create-home --shell /bin/bash appuser \
    && chown appuser:appuser -R /etc/confluent/ /usr/logs \
    && mkdir /licenses \
    && rm /etc/yum.repos.d/adoptium.repo # Remove temurin-jdk repo to reduce intermittent build failures

# enable FIPS in docker image, this will only work if underlying OS has FIPS enabled as well else is a NO OP.
RUN update-crypto-policies --set FIPS

COPY license.txt /licenses
COPY openssl-fips.cnf  /usr/local/ssl/openssl-fips.cnf
COPY --from=build-ub-package-dedupe /build/package_dedupe/package_dedupe /usr/bin/package_dedupe
COPY --from=build-ub-package-dedupe /build/ub/ub /usr/bin/ub

COPY --chown=appuser:appuser target/${ARTIFACT_ID}-${PROJECT_VERSION}-package/share/doc/* /usr/share/doc/${ARTIFACT_ID}/
COPY --chown=appuser:appuser target/${ARTIFACT_ID}-${PROJECT_VERSION}-package/share/java/${ARTIFACT_ID}/* /usr/share/java/${ARTIFACT_ID}/
COPY --chown=appuser:appuser include/etc/confluent/docker /etc/confluent/docker
COPY --chown=appuser:appuser include/etc/cp-base-java /etc/cp-base-java

# Some components have hardcoded paths to /usr/share/java/cp-base-new, so to keep backward compatibility a symlink is created
RUN ln -s /usr/share/java/${ARTIFACT_ID} /usr/share/java/cp-base-new

# Disable setuid/setgid bits
RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true
RUN find / -perm /6000 -type f -exec chmod g-s {} \; || true

USER appuser
WORKDIR /home/appuser
