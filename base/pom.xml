<?xml version="1.0" encoding="UTF-8"?>
<!--~
  ~ Copyright 2017 Confluent Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>common-docker</artifactId>
        <version>7.2.4</version>
    </parent>

    <packaging>pom</packaging>

    <artifactId>cp-base-new</artifactId>

    <description>Base for Confluent Docker images</description>
    <name>${project.artifactId}</name>

    <properties>
        <docker.skip-build>false</docker.skip-build>
        <docker.skip-test>false</docker.skip-test>
        <docker.pull-image>true</docker.pull-image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>utility-belt</artifactId>
            <version>${io.confluent.common-docker.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Operator dependencies for metrics integration -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-jvm</artifactId>
            <version>${jolokia-jvm.version}</version>
        </dependency>

        <dependency>
            <groupId>io.prometheus.jmx</groupId>
            <artifactId>jmx_prometheus_javaagent</artifactId>
            <version>${jmx_prometheus_javaagent.version}</version>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>disk-usage-agent</artifactId>
            <version>${io.confluent.common.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-reload4j</artifactId>
        </dependency>

        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>logredactor</artifactId>
        </dependency>
    </dependencies>

      <!-- This jar is only used by the deb8 base image and does not get added to the other images. -->
      <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../docker-utils/target</directory>
                                    <includes>
                                        <include>docker-utils-${CONFLUENT_VERSION}-jar-with-dependencies.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <buildArgs>
                        <UBI_MINIMAL_VERSION>${ubi.image.version}</UBI_MINIMAL_VERSION>
                        <OPENSSL_VERSION>-${ubi.openssl.version}</OPENSSL_VERSION>
                        <WGET_VERSION>-${ubi.wget.version}</WGET_VERSION>
                        <NETCAT_VERSION>-${ubi.netcat.version}</NETCAT_VERSION>
                        <PYTHON39_VERSION>-${ubi.python39.version}</PYTHON39_VERSION>
                        <TAR_VERSION>-${ubi.tar.version}</TAR_VERSION>
                        <PROCPS_VERSION>-${ubi.procps.version}</PROCPS_VERSION>
                        <KRB5_WORKSTATION_VERSION>-${ubi.krb5.workstation.version}</KRB5_WORKSTATION_VERSION>
                        <IPUTILS_VERSION>-${ubi.iputils.version}</IPUTILS_VERSION>
                        <HOSTNAME_VERSION>-${ubi.hostname.version}</HOSTNAME_VERSION>
                        <XZ_LIBS_VERSION>-${ubi.xzlibs.version}</XZ_LIBS_VERSION>
                        <GLIBC_VERSION>-${ubi.glibc.version}</GLIBC_VERSION>
                        <CURL_VERSION>-${ubi.curl.version}</CURL_VERSION>
                        <ZULU_OPENJDK_VERSION>-${ubi.zulu.openjdk.version}</ZULU_OPENJDK_VERSION>
                        <PYTHON_PIP_VERSION>-${ubi.python.pip.version}</PYTHON_PIP_VERSION>
                        <PYTHON_SETUPTOOLS_VERSION>==${ubi.python.setuptools.version}</PYTHON_SETUPTOOLS_VERSION>
                        <PYTHON_CONFLUENT_DOCKER_UTILS_VERSION>${ubi.python.confluent.docker.utils.version}</PYTHON_CONFLUENT_DOCKER_UTILS_VERSION>
                        <SKIP_SECURITY_UPDATE_CHECK>${docker.skip-security-update-check}</SKIP_SECURITY_UPDATE_CHECK>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
